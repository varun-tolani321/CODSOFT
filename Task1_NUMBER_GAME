
TASK 1:
---------

NUMBER GAME
-------------
1. Generate a random number within a specified range, such as 1 to 100. 2. Prompt the user to enter their guess for the generated number.
3. Compare the user's guess with the generated number and provide feedback on whether the guess is correct, too high, or too low.
4. Repeat steps 2 and 3 until the user guesses the correct number. You can incorporate additional details as follows:
5. Limit the number of attempts the user has to guess the number.
6. Add the option for multiple rounds, allowing the user to play again.
7. Display the user's score, which can be based on the number of attempts taken or rounds won.
-------------------------------------------------------------------------------------------------------------------------------------------

CODE:
-------

import java.util.*;

public class NUMBER_GAME {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();
        
        int minRange = 1;
        int maxRange = 100;
        int maxAttempts = 10;
        int rounds = 0;
        int score = 0;
        System.out.println("Maximum Attempts = "+maxAttempts);
        boolean playAgain = true;
        while (playAgain) {
            int targetNumber = random.nextInt(maxRange - minRange + 1) + minRange;
            System.out.println("Round " + (rounds + 1));
            
            int attempts = 0;
            boolean guessedCorrectly = false;
            //to get in first attempt for checking highest score then remove comments from line 22.
            //System.out.println("Target Number: " + targetNumber);
            System.out.println("Guess a number between " + minRange + " and " + maxRange);
            while (attempts < maxAttempts) {
                System.out.print("Enter your guess: ");
                int userGuess = scanner.nextInt();
                attempts++;

                if (userGuess == targetNumber) {
                    System.out.println("Congratulations! You guessed the correct number in " + attempts + " attempts.");
                    score += maxAttempts - attempts + 1;
                    guessedCorrectly = true;
                    break;
                } else if (userGuess < targetNumber) {
                    System.out.println("Too low. Try again.");
                } else {
                    System.out.println("Too high. Try again.");
                }
            }
            
            if (!guessedCorrectly) {
                System.out.println("You've used all your attempts. The correct number was: " + targetNumber);
            }
            System.out.println("Game over. Your total score: " + score+"/"+maxAttempts*(rounds+1));
            rounds++;

            System.out.print("Do you want to play again? (yes/no): ");
            String playAgainInput = scanner.next().toLowerCase();
            if (!playAgainInput.equals("yes")) {
                playAgain = false;
            }
        }
    }
}

/*
 Description
Please see coment for getting 10/10.You have to remove it.
 The code first imports the java.util package, which contains the Scanner class. The Scanner class is used to read input from the user.
The code then creates a Random object, which is used to generate random numbers.

The code then defines the following variables:
•	minRange: The minimum number in the guessing range.
•	maxRange: The maximum number in the guessing range.
•	maxAttempts: The maximum number of attempts allowed per round.
•	rounds: The number of rounds played so far.
•	score: The total score for all rounds played.

The code then prompts the user to enter the maximum number of attempts.
The code then enters a loop where the user plays a round of the game. In each round, the following steps are performed:
•	A random number is generated within the specified range.
•	The user is prompted to guess a number.
•	The user's guess is checked against the random number.
•	If the user's guess is correct, the user is congratulated and the score is incremented.
•	If the user's guess is incorrect, the number of attempts is incremented.
•	If the number of attempts reaches the maximum, the round ends and the user is told the correct number.
The code then prints the user's total score and asks the user if they want to play again. If the user does not want to play again, the loop ends.

Here is a more detailed explanation of some of the key lines of code:

int targetNumber = random.nextInt(maxRange - minRange + 1) + minRange;

This line of code generates a random number within the specified range. The random.nextInt() method generates a random integer between 0 and the specified number. In this case, the specified number is maxRange - minRange + 1, which is the total number of possible numbers in the range. The + minRange at the end adds the minimum number to the generated number, so that the resulting number is within the specified range.

System.out.print("Enter your guess: ");
int userGuess = scanner.nextInt();

prompts the user to enter a guess and stores the user's input in the userGuess variable. The System.out.print() method prints a message to the console. The scanner.nextInt() method reads an integer from the user input and stores it in the specified variable.

if (userGuess == targetNumber) {
    System.out.println("Congratulations! You guessed the correct number in " + attempts + " attempts.");
    score += maxAttempts - attempts + 1;
    guessedCorrectly = true;
    break;
} else if (userGuess < targetNumber) {
    System.out.println("Too low. Try again.");
} else {
    System.out.println("Too high. Try again.");
}

the user's guess is correct. If the guess is correct, the user is congratulated, the score is incremented, and the loop is broken. Otherwise, the user is told if their guess is too low or too high.
 
 */

 /*
  Results

  Output 1:-
  Maximum Attempts = 10
Round 1
Guess a number between 1 and 100
Enter your guess: 30
Too low. Try again.
Enter your guess: 50
Too high. Try again.
Enter your guess: 40
Too low. Try again.
Enter your guess: 45
Too high. Try again.
Enter your guess: 43
Too low. Try again.
Enter your guess: 44
Congratulations! You guessed the correct number in 6 attempts.
Game over. Your total score: 5/10
Do you want to play again? (yes/no): yes
Round 2
Guess a number between 1 and 100
Enter your guess: 45
Too low. Try again.
Enter your guess: 78
Too high. Try again.
Enter your guess: 65
Too high. Try again.
Enter your guess: 55
Too high. Try again.
Enter your guess: 49
Congratulations! You guessed the correct number in 5 attempts.
Game over. Your total score: 11/20
Do you want to play again? (yes/no): no


2nd Output:-
In this we will be knowing Target Number as we know it we can get full marks 10/10.

Output 2:-
Maximum Attempts = 10
Round 1
Target Number: 41
Guess a number between 1 and 100
Enter your guess: 41
Congratulations! You guessed the correct number in 1 attempts.
Game over. Your total score: 10/10
Do you want to play again? (yes/no): yes
Round 2
Target Number: 33
Guess a number between 1 and 100
Enter your guess: 33
Congratulations! You guessed the correct number in 1 attempts.
Game over. Your total score: 20/20
Do you want to play again? (yes/no): no
  */

-----------------------------------------------------------------------------------------------------------------------------------------
